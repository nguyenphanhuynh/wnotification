{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, onMessage } from \"firebase/messaging\"; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBbumjFW-R2QAN1Hl-kMV54fcMh8oB--EI\",\n  authDomain: \"wax-notification.firebaseapp.com\",\n  projectId: \"wax-notification\",\n  storageBucket: \"wax-notification.appspot.com\",\n  messagingSenderId: \"1029035108545\",\n  appId: \"1:1029035108545:web:c55c1f764218356b6e0c40\",\n  measurementId: \"G-VYMQC1VSCG\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\nexport { firebaseApp };\nexport const getToken = setTokenFound => {\n  return getToken(messaging, {\n    vapidKey: 'GENERATED_MESSAGING_KEY'\n  }).then(currentToken => {\n    if (currentToken) {\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true); // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false); // shows on the UI that permission is required\n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err); // catch error while creating client token\n  });\n};\nexport const onMessageListener = () => new Promise(resolve => {\n  onMessage(messaging, payload => {\n    resolve(payload);\n  });\n});","map":{"version":3,"names":["initializeApp","getMessaging","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","messaging","getToken","setTokenFound","vapidKey","then","currentToken","console","log","catch","err","onMessageListener","Promise","resolve","payload"],"sources":["/Users/johnnynguyen/Documents/wax/poc/push-notification/fire_client/src/config/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, onMessage } from \"firebase/messaging\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBbumjFW-R2QAN1Hl-kMV54fcMh8oB--EI\",\n    authDomain: \"wax-notification.firebaseapp.com\",\n    projectId: \"wax-notification\",\n    storageBucket: \"wax-notification.appspot.com\",\n    messagingSenderId: \"1029035108545\",\n    appId: \"1:1029035108545:web:c55c1f764218356b6e0c40\",\n    measurementId: \"G-VYMQC1VSCG\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\nexport {\n    firebaseApp\n}\n\nexport const getToken = (setTokenFound) => {\n    return getToken(messaging, { vapidKey: 'GENERATED_MESSAGING_KEY' }).then((currentToken) => {\n        if (currentToken) {\n            console.log('current token for client: ', currentToken);\n            setTokenFound(true);\n            // Track the token -> client mapping, by sending to backend server\n            // show on the UI that permission is secured\n        } else {\n            console.log('No registration token available. Request permission to generate one.');\n            setTokenFound(false);\n            // shows on the UI that permission is required\n        }\n    }).catch((err) => {\n        console.log('An error occurred while retrieving token. ', err);\n        // catch error while creating client token\n    });\n}\n\nexport const onMessageListener = () =>\n    new Promise((resolve) => {\n        onMessage(messaging, (payload) => {\n            resolve(payload);\n        });\n    });"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,oBAAxC,C,CAEA;AACA;;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,kCAFO;EAGnBC,SAAS,EAAE,kBAHQ;EAInBC,aAAa,EAAE,8BAJI;EAKnBC,iBAAiB,EAAE,eALA;EAMnBC,KAAK,EAAE,4CANY;EAOnBC,aAAa,EAAE;AAPI,CAAvB,C,CAUA;;AACA,MAAMC,WAAW,GAAGX,aAAa,CAACG,cAAD,CAAjC;AACA,MAAMS,SAAS,GAAGX,YAAY,CAACU,WAAD,CAA9B;AACA,SACIA,WADJ;AAIA,OAAO,MAAME,QAAQ,GAAIC,aAAD,IAAmB;EACvC,OAAOD,QAAQ,CAACD,SAAD,EAAY;IAAEG,QAAQ,EAAE;EAAZ,CAAZ,CAAR,CAA6DC,IAA7D,CAAmEC,YAAD,IAAkB;IACvF,IAAIA,YAAJ,EAAkB;MACdC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,YAA1C;MACAH,aAAa,CAAC,IAAD,CAAb,CAFc,CAGd;MACA;IACH,CALD,MAKO;MACHI,OAAO,CAACC,GAAR,CAAY,sEAAZ;MACAL,aAAa,CAAC,KAAD,CAAb,CAFG,CAGH;IACH;EACJ,CAXM,EAWJM,KAXI,CAWGC,GAAD,IAAS;IACdH,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DE,GAA1D,EADc,CAEd;EACH,CAdM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMC,iBAAiB,GAAG,MAC7B,IAAIC,OAAJ,CAAaC,OAAD,IAAa;EACrBtB,SAAS,CAACU,SAAD,EAAaa,OAAD,IAAa;IAC9BD,OAAO,CAACC,OAAD,CAAP;EACH,CAFQ,CAAT;AAGH,CAJD,CADG"},"metadata":{},"sourceType":"module"}